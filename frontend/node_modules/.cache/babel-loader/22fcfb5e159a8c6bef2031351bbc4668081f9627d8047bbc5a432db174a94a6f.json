{"ast":null,"code":"import api from '../lib/axios';\nclass SessionService {\n  // Tüm oturumları getir\n  async getAll() {\n    var _response$data$_embed;\n    const response = await api.get('/sessions');\n    return ((_response$data$_embed = response.data._embedded) === null || _response$data$_embed === void 0 ? void 0 : _response$data$_embed.domainSessionList) || [];\n  }\n\n  // ID'ye göre oturumu getir\n  async getById(id) {\n    const response = await api.get(`/sessions/${id}`);\n    return response.data;\n  }\n\n  // Yeni oturum oluştur\n  async create(session) {\n    const response = await api.post('/sessions', session);\n    return response.data;\n  }\n\n  // Oturumu güncelle\n  async update(id, updatedSession) {\n    const response = await api.put(`/sessions/${id}`, updatedSession);\n    return response.data;\n  }\n\n  // Oturumu sil\n  async delete(id) {\n    const response = await api.delete(`/sessions/${id}`);\n    return response.data;\n  }\n\n  // Belirli bir salonun tüm oturumlarını getir\n  async getAllSessionsFromHall(hallId) {\n    var _response$data$_embed2;\n    const response = await api.get(`/sessions/hall/${hallId}`);\n    return ((_response$data$_embed2 = response.data._embedded) === null || _response$data$_embed2 === void 0 ? void 0 : _response$data$_embed2.domainSessionList) || [];\n  }\n\n  // Belirli bir filmin tüm oturumlarını getir\n  async getAllSessionsFromMovie(movieId) {\n    var _response$data$_embed3;\n    const response = await api.get(`/sessions/movie/${movieId}`);\n    return ((_response$data$_embed3 = response.data._embedded) === null || _response$data$_embed3 === void 0 ? void 0 : _response$data$_embed3.domainSessionList) || [];\n  }\n\n  // Belirli bir oturumun bitiş zamanını getir\n  async endTimeBySessionId(id) {\n    const response = await api.get(`/sessions/${id}/session/end`);\n    return response.data; // LocalDateTime string olarak gelir (örneğin: \"2025-07-27T21:00:00\")\n  }\n}\nexport default new SessionService();","map":{"version":3,"names":["api","SessionService","getAll","_response$data$_embed","response","get","data","_embedded","domainSessionList","getById","id","create","session","post","update","updatedSession","put","delete","getAllSessionsFromHall","hallId","_response$data$_embed2","getAllSessionsFromMovie","movieId","_response$data$_embed3","endTimeBySessionId"],"sources":["/Users/umutavc/WebstormProjects/cms/src/services/SessionService.js"],"sourcesContent":["import api from '../lib/axios';\n\nclass SessionService {\n    // Tüm oturumları getir\n    async getAll() {\n        const response = await api.get('/sessions');\n        return response.data._embedded?.domainSessionList || [];\n    }\n\n    // ID'ye göre oturumu getir\n    async getById(id) {\n        const response = await api.get(`/sessions/${id}`);\n        return response.data;\n    }\n\n    // Yeni oturum oluştur\n    async create(session) {\n        const response = await api.post('/sessions', session);\n        return response.data;\n    }\n\n    // Oturumu güncelle\n    async update(id, updatedSession) {\n        const response = await api.put(`/sessions/${id}`, updatedSession);\n        return response.data;\n    }\n\n    // Oturumu sil\n    async delete(id) {\n        const response = await api.delete(`/sessions/${id}`);\n        return response.data;\n    }\n\n    // Belirli bir salonun tüm oturumlarını getir\n    async getAllSessionsFromHall(hallId) {\n        const response = await api.get(`/sessions/hall/${hallId}`);\n        return response.data._embedded?.domainSessionList || [];\n    }\n\n    // Belirli bir filmin tüm oturumlarını getir\n    async getAllSessionsFromMovie(movieId) {\n        const response = await api.get(`/sessions/movie/${movieId}`);\n        return response.data._embedded?.domainSessionList || [];\n    }\n\n    // Belirli bir oturumun bitiş zamanını getir\n    async endTimeBySessionId(id) {\n        const response = await api.get(`/sessions/${id}/session/end`);\n        return response.data; // LocalDateTime string olarak gelir (örneğin: \"2025-07-27T21:00:00\")\n    }\n}\n\nexport default new SessionService();\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAE9B,MAAMC,cAAc,CAAC;EACjB;EACA,MAAMC,MAAMA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IACX,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAO,EAAAF,qBAAA,GAAAC,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAJ,qBAAA,uBAAvBA,qBAAA,CAAyBK,iBAAiB,KAAI,EAAE;EAC3D;;EAEA;EACA,MAAMC,OAAOA,CAACC,EAAE,EAAE;IACd,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAaK,EAAE,EAAE,CAAC;IACjD,OAAON,QAAQ,CAACE,IAAI;EACxB;;EAEA;EACA,MAAMK,MAAMA,CAACC,OAAO,EAAE;IAClB,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACa,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;IACrD,OAAOR,QAAQ,CAACE,IAAI;EACxB;;EAEA;EACA,MAAMQ,MAAMA,CAACJ,EAAE,EAAEK,cAAc,EAAE;IAC7B,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,aAAaN,EAAE,EAAE,EAAEK,cAAc,CAAC;IACjE,OAAOX,QAAQ,CAACE,IAAI;EACxB;;EAEA;EACA,MAAMW,MAAMA,CAACP,EAAE,EAAE;IACb,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,MAAM,CAAC,aAAaP,EAAE,EAAE,CAAC;IACpD,OAAON,QAAQ,CAACE,IAAI;EACxB;;EAEA;EACA,MAAMY,sBAAsBA,CAACC,MAAM,EAAE;IAAA,IAAAC,sBAAA;IACjC,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,kBAAkBc,MAAM,EAAE,CAAC;IAC1D,OAAO,EAAAC,sBAAA,GAAAhB,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAa,sBAAA,uBAAvBA,sBAAA,CAAyBZ,iBAAiB,KAAI,EAAE;EAC3D;;EAEA;EACA,MAAMa,uBAAuBA,CAACC,OAAO,EAAE;IAAA,IAAAC,sBAAA;IACnC,MAAMnB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,mBAAmBiB,OAAO,EAAE,CAAC;IAC5D,OAAO,EAAAC,sBAAA,GAAAnB,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAgB,sBAAA,uBAAvBA,sBAAA,CAAyBf,iBAAiB,KAAI,EAAE;EAC3D;;EAEA;EACA,MAAMgB,kBAAkBA,CAACd,EAAE,EAAE;IACzB,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,aAAaK,EAAE,cAAc,CAAC;IAC7D,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B;AACJ;AAEA,eAAe,IAAIL,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}