{"ast":null,"code":"import api from'../lib/axios';class SessionService{// Tüm oturumları getir\nasync getAll(){var _response$data$_embed;const response=await api.get('/sessions');return((_response$data$_embed=response.data._embedded)===null||_response$data$_embed===void 0?void 0:_response$data$_embed.domainSessionList)||[];}// ID'ye göre oturumu getir\nasync getById(id){const response=await api.get(\"/sessions/\".concat(id));return response.data;}async create(session){try{const response=await api.post('/sessions',session);return response.data;}catch(err){// Opsiyonel: console.log(err.response?.data || err);\nthrow err;// Hata varsa dışarı fırlat\n}}// Oturumu güncelle\nasync update(id,updatedSession){const response=await api.put(\"/sessions/\".concat(id),updatedSession);return response.data;}async reserveSeats(sessionId,seatIds,customerId){const response=await api.post(\"/sessions/\".concat(sessionId,\"/reserve?customerId=\").concat(customerId),seatIds);return response.data;}// Oturumu sil\nasync delete(id){const response=await api.delete(\"/sessions/\".concat(id));return response.data;}// Belirli bir salonun tüm oturumlarını getir\nasync getAllSessionsFromHall(hallId){var _response$data$_embed2;const response=await api.get(\"/sessions/hall/\".concat(hallId));return((_response$data$_embed2=response.data._embedded)===null||_response$data$_embed2===void 0?void 0:_response$data$_embed2.domainSessionList)||[];}async getSeatsBySessionId(sessionId){const response=await api.get(\"/sessions/\".concat(sessionId,\"/seats\"));return response.data;}// Belirli bir filmin tüm oturumlarını getir\nasync getAllSessionsFromMovie(movieId){var _response$data$_embed3;const response=await api.get(\"/sessions/movie/\".concat(movieId));return((_response$data$_embed3=response.data._embedded)===null||_response$data$_embed3===void 0?void 0:_response$data$_embed3.domainSessionList)||[];}// Belirli bir oturumun bitiş zamanını getir\nasync endTimeBySessionId(id){const response=await api.get(\"/sessions/\".concat(id,\"/session/end\"));return response.data;// LocalDateTime string olarak gelir (örneğin: \"2025-07-27T21:00:00\")\n}}export default new SessionService();","map":{"version":3,"names":["api","SessionService","getAll","_response$data$_embed","response","get","data","_embedded","domainSessionList","getById","id","concat","create","session","post","err","update","updatedSession","put","reserveSeats","sessionId","seatIds","customerId","delete","getAllSessionsFromHall","hallId","_response$data$_embed2","getSeatsBySessionId","getAllSessionsFromMovie","movieId","_response$data$_embed3","endTimeBySessionId"],"sources":["/Users/umutavc/WebstormProjects/cms/src/services/SessionService.js"],"sourcesContent":["import api from '../lib/axios';\n\nclass SessionService {\n    // Tüm oturumları getir\n    async getAll() {\n        const response = await api.get('/sessions');\n        return response.data._embedded?.domainSessionList || [];\n    }\n\n    // ID'ye göre oturumu getir\n    async getById(id) {\n        const response = await api.get(`/sessions/${id}`);\n        return response.data;\n    }\n\n    async create(session) {\n        try {\n            const response = await api.post('/sessions', session);\n            return response.data;\n        } catch (err) {\n            // Opsiyonel: console.log(err.response?.data || err);\n            throw err; // Hata varsa dışarı fırlat\n        }\n    }\n\n    // Oturumu güncelle\n    async update(id, updatedSession) {\n        const response = await api.put(`/sessions/${id}`, updatedSession);\n        return response.data;\n    }\n    async reserveSeats(sessionId, seatIds, customerId) {\n        const response = await api.post(\n            `/sessions/${sessionId}/reserve?customerId=${customerId}`,\n            seatIds\n        );\n        return response.data;\n    }\n\n    // Oturumu sil\n    async delete(id) {\n        const response = await api.delete(`/sessions/${id}`);\n        return response.data;\n    }\n\n    // Belirli bir salonun tüm oturumlarını getir\n    async getAllSessionsFromHall(hallId) {\n        const response = await api.get(`/sessions/hall/${hallId}`);\n        return response.data._embedded?.domainSessionList || [];\n    }\n    async getSeatsBySessionId(sessionId) {\n        const response = await api.get(`/sessions/${sessionId}/seats`);\n        return response.data;\n    }\n    // Belirli bir filmin tüm oturumlarını getir\n    async getAllSessionsFromMovie(movieId) {\n        const response = await api.get(`/sessions/movie/${movieId}`);\n        return response.data._embedded?.domainSessionList || [];\n    }\n\n    // Belirli bir oturumun bitiş zamanını getir\n    async endTimeBySessionId(id) {\n        const response = await api.get(`/sessions/${id}/session/end`);\n        return response.data; // LocalDateTime string olarak gelir (örneğin: \"2025-07-27T21:00:00\")\n    }\n}\n\nexport default new SessionService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}