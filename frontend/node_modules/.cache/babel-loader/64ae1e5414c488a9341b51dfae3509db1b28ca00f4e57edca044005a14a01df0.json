{"ast":null,"code":"import api from '../lib/axios';\nclass AdminTicketClerkService {\n  async getAll() {\n    var _response$data$_embed;\n    const response = await api.get('/movies');\n    return ((_response$data$_embed = response.data._embedded) === null || _response$data$_embed === void 0 ? void 0 : _response$data$_embed.domainMovieList) || [];\n  }\n  async getById(id) {\n    const response = await api.get(`/movies/${id}`);\n    return response.data;\n  }\n  async create(ticketClerk) {\n    var _response$data$_embed2;\n    const response = await api.post('/movies', ticketClerk);\n    return ((_response$data$_embed2 = response.data._embedded) === null || _response$data$_embed2 === void 0 ? void 0 : _response$data$_embed2.domainMovieList) || [];\n  }\n  async update(id, updatedClerk) {\n    var _response$data$_embed3;\n    const response = await api.put(`/movies/${id}`, updatedClerk);\n    return ((_response$data$_embed3 = response.data._embedded) === null || _response$data$_embed3 === void 0 ? void 0 : _response$data$_embed3.domainMovieList) || [];\n  }\n  async delete(id) {\n    var _response$data$_embed4;\n    const response = await api.delete(`/movies/${id}`);\n    return ((_response$data$_embed4 = response.data._embedded) === null || _response$data$_embed4 === void 0 ? void 0 : _response$data$_embed4.domainMovieList) || [];\n  }\n}\nexport default new AdminTicketClerkService();","map":{"version":3,"names":["api","AdminTicketClerkService","getAll","_response$data$_embed","response","get","data","_embedded","domainMovieList","getById","id","create","ticketClerk","_response$data$_embed2","post","update","updatedClerk","_response$data$_embed3","put","delete","_response$data$_embed4"],"sources":["/Users/umutavc/WebstormProjects/cms/src/services/MovieService.js"],"sourcesContent":["import api from '../lib/axios';\nclass AdminTicketClerkService {\n\n    async getAll() {\n        const response = await api.get('/movies')\n        return response.data._embedded?.domainMovieList || [];\n    }\n\n    async getById(id) {\n        const response = await api.get(`/movies/${id}`);\n        return response.data;\n    }\n\n    async create(ticketClerk) {\n        const response = await api.post('/movies', ticketClerk);\n        return response.data._embedded?.domainMovieList || [];\n    }\n\n    async update(id, updatedClerk) {\n        const response = await api.put(`/movies/${id}`, updatedClerk);\n        return response.data._embedded?.domainMovieList || [];\n    }\n\n    async delete(id) {\n        const response = await api.delete(`/movies/${id}`);\n        return response.data._embedded?.domainMovieList || [];\n    }\n}\n\nexport default new AdminTicketClerkService();\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAC9B,MAAMC,uBAAuB,CAAC;EAE1B,MAAMC,MAAMA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IACX,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,SAAS,CAAC;IACzC,OAAO,EAAAF,qBAAA,GAAAC,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAJ,qBAAA,uBAAvBA,qBAAA,CAAyBK,eAAe,KAAI,EAAE;EACzD;EAEA,MAAMC,OAAOA,CAACC,EAAE,EAAE;IACd,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,WAAWK,EAAE,EAAE,CAAC;IAC/C,OAAON,QAAQ,CAACE,IAAI;EACxB;EAEA,MAAMK,MAAMA,CAACC,WAAW,EAAE;IAAA,IAAAC,sBAAA;IACtB,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEF,WAAW,CAAC;IACvD,OAAO,EAAAC,sBAAA,GAAAT,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAM,sBAAA,uBAAvBA,sBAAA,CAAyBL,eAAe,KAAI,EAAE;EACzD;EAEA,MAAMO,MAAMA,CAACL,EAAE,EAAEM,YAAY,EAAE;IAAA,IAAAC,sBAAA;IAC3B,MAAMb,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,GAAG,CAAC,WAAWR,EAAE,EAAE,EAAEM,YAAY,CAAC;IAC7D,OAAO,EAAAC,sBAAA,GAAAb,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAU,sBAAA,uBAAvBA,sBAAA,CAAyBT,eAAe,KAAI,EAAE;EACzD;EAEA,MAAMW,MAAMA,CAACT,EAAE,EAAE;IAAA,IAAAU,sBAAA;IACb,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,MAAM,CAAC,WAAWT,EAAE,EAAE,CAAC;IAClD,OAAO,EAAAU,sBAAA,GAAAhB,QAAQ,CAACE,IAAI,CAACC,SAAS,cAAAa,sBAAA,uBAAvBA,sBAAA,CAAyBZ,eAAe,KAAI,EAAE;EACzD;AACJ;AAEA,eAAe,IAAIP,uBAAuB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}